wUDEHdczflcZI65x
mongosh "mongodb+srv://cluster0.jf2m2.mongodb.net/" --apiVersion 1 --username muratvuranok


mongodb+srv://muratvuranok:wUDEHdczflcZI65x@cluster0.jf2m2.mongodb.net/



Son 10 yıl içerisinde (2014 sonrası) yapılmış filmleri ve bu filmlere ait olan yorumların listelenmesi


1. section -> $match   : filtreleme
2. section -> $lookup  : join
3. section -> $project : output

[
    {
        $match: {
            year: {
                $gte: 2014
            }
        }
    },
    {
        $lookup: {
 
            /*
                from         -> target collection(table)
                localField   -> local join field
                foreignField -> target join field
                as           -> name for the result
            */

            from: "comments",
            localField: "_id",
            foreignField: "movie_id",
            as: "movie_comments"
        }
    },
    {
        $project: {
                title: 1,
                year: 1,
                _id: 0,
                "movie_comments.text": 1,
                "movie_comments.email": 1
        }
    }
]

Kategorisi Western olan filmlerin ortalama süresi nedir?


[
    {
        $match: {
            year: { $gte: 2014 },
            genres: "Western"  // birden fazla anahtar kelime yer alacak ise, in kullanabilirsiniz
            // genres: { $in: ["Western", "Drama"] }
        },
        {
            $lookup:{
                from: "comments",
                localField: "_id",
                foreignField: "movie_id",
                as: "movie_comments"
            }
        },
        {
            $group:{
                _id: null,
                averageDurationTime: { $avg : "$runtime" },// runtime alanına göre ortalamasını hesaplar
                movies: { $push: "$$ROOT" } // Tüm belgeleri saklar, $push opersatörü, MongoDB'nin $group aşamasındaki bir group içerisinde yer alan değerlerin bir listesini oluşturmak için kullanılır. $$ROOT ise, mevcut belgenin tamamını ifade eder. Yani $push: "$$ROOT" ifadesi, her belgeyi olduğu gibi bir diziye ekler
            }
        },
        {
            $project: {   
                _id: 0,
                averageDurationTime: 1,
                movies: { 
                    title: 1,
                    genres: 1,
                    year: 1,
                    runtime: 1,
                    "movie_comments.text": 1
                }
            }
        }
    }
]


Türüne göre filmlerin ortalama süresini hesaplayınız


$unwind  -> bir dizi (array) alanını çözmek için kullanılır. genres dizisi içerisinde yer alan her bir eleman için ayrı bir belge oluşturur.

[
    {
        $unwind: { path: "$genres"}
    },
    {
        $group: {
            _id: "$genres",
            avgTime : {
                $avg: "$runtime"
            }
        }
    },
    {
        $sort:{
            avgTime: -1
        }
    }
]


Action türünde yer alan filmlerin, en uzun süresi nedir?
[
    {
        $match: {
            genres: "Action"
        }
    },
    {
        $group: {
            _id: null,
            maxTime: {
                $max: "$runtime"
            }
        }
    }
]


Comedy türünde yer alan filmlerin, ortalama IMDB puanını hesaplayınız

[
    {
        $match: {
            genres: "Comedy"
        }
    },
    {
        $group: {
            _id: null,
            avgRating: {
                $avg: "$imdb.rating"
            }
        }
    },
    {
        $project:{
            _id: 0, 
            avgRating: 1
        }
    }
]

IMDB puanını düz bir sayıya yuvarlama işlemi
$addFields    -> yeni bir alan eklemek veya mevcut alanı dönüştürmek için kullanılır.
roundedRating -> yeni eklenen alan adı
$round (operatörü) -> bir değeri belirtilen basamağa kadar yuvarlar.
- 0 : Tam sayıya yuvarlar
- 1 : virgülden sonra 1 ondalık basamak bırakır
- 2 : virgülden sonra 2 ondalık basamak bırakır


NOT: $project belirmediğiniz sürece, sorguya tüm alanlar dahil olacaktır.

SELECT Baslik = title , roundedRating FROM movies
SELECT title AS Baslik , roundedRating FROM movies
SELECT title Baslik , roundedRating FROM movies

[
    {
        $addFields: {
            roundedRating: {
                $round: ["$imdb.rating", 0]
            }
        }
    },
    {
        $project: {
            _id: 0,
            baslik = "title",
            roundedRating: 1
        }
    }
]

Filmlerin süresni saat ve dakika olarak gösteriniz. ( addFileds, hours, minutes )

[
    {
        $addFields: {
            hours: {
                $floor: {
                    $divide: ["$runtime" , 60]
                }
            },
            minutes: {
                $mod: ["$runtime", 60]
            }
        }
    },
    {
        $project: { 
            /*
                specifications: The fileds to inclue or exclude
            */ 
            _id: 0,
            title: 1,
            runtime: 1,
            hours: 1,
            minutes: 1
        }
    }
]

Filmlerin duration alanına göre bir süre kategorisi ekleyelim, Eğer filmin süresi 120 dk ve üzeri ise "Long" değilse "Short" ibaresi yer alsın


[
    {
        $addFields: {
            durationCategory: {
                $cond: {
                    if: { $gte: ["$runtime", 120] },
                    then: "Long",
                    else: "Short"
                }
            }
        }
    },
    {
        $sort: {
            durationCategory: 1
        }
    },
    {
        $project: {
            _id: 0,
            title: 1,
            runtime: 1,
            durationCategory: 1,
            poster: 1,
            year: 1
        }
    }
]


[
    {
        $project: {
            _id: 0,
            title: 1,
            runtime: 1,
            poster: 1,
            year: 1,
            durationCategory: {
                $cod: {
                    if: {$gte: ["$runtime", 120]},
                    then: "Long",
                    else: "Short"
                }
            }
        }
    },
    {
        $sort: { durationCategory: 1 }
    }
]


// Filmin bazı bilgilerini tek bir alan içerisinde göstermek, title - year - rating  summary adında bir filed oluşturunuz

(addFiled summary -> $concat)


[
    {
        $addFields: {
            summary: {
                $concat: [
                    "$title", 
                    " - (", 
                    {
                        $toString: "$year" 
                    },
                    ") - IMDB: ", 
                    {
                        $toString: $imdb.rating"
                    }
                ]
            }
        }
    },
    {
        $project: {
            _id: 0,
            summary: 1
        }
    }
]


Merge Kullanımı

$limit -> gösterilecek olan kayıt sayısını belirler.
$merge -> işlem sonucunu farklı bir collection'a ekleme işlemi yapar
    - into "movies_summary" -> verilen isimdeki collection'a ekleme işlemi yapar.
    - whenMatched           -> eğer aynı kimliğe(_id) sahip olan bir belge var ise, bu belgeyi birleştir. (var olan datayı , yeni bilgileri ile günceller)
    - whenNotMatched: "insert" -> Eğer belge "movies_summary" koleksiyonunda yok ise yeni bir belge olarak ekleme işlemi yapar


[ 
    {
        $project: {
            _id: 0,
            title: 1,
            year: 1,
            imdbRating: "$imdb.rating",
            summary: {
                $concat: [
                    "$title", 
                    " - (", 
                    {
                        $toString: "$year" 
                    },
                    ") - IMDB: ", 
                    {
                        $toString: $imdb.rating"
                    }
                ]
            }
        },
        {
            $limit: {
                1000
            }
        },
        {
            $merge: {
                into: "movies_summary", // SELECT CONCAT('',''), ProductName AS UrunAdi , (Price * Quantity) AS TotalPrice INTO Urunler FROM Products
                whenMatched: "merge",
                whenNotMatched: "insert"
            }
        }
    }
]

Cast oyuncularının isimlerini küçük harf olarak yazınız

[
    {
        $project: {
            _id: 0,
            title: 1, 
            lowerCaseCast: {
                $map: {
                    input : "$cast",
                    as: "actor",
                    in: {
                        $toLower: "$$actor"
                    }
                }
            }
        }
    },
    {
        $limit:{100}
    }
]

[
    {
        $project: {
            _id: 0,
            title: 1, 
            joinCast: {
                $reduce:{
                    input: {
                        $map: {
                            input : "$cast",
                            as: "actor",
                            in: {
                                $toLower: "$$actor"
                            }
                        }
                    },
                    initialValue: "",
                    in: {
                        $concat: [
                            "$$value",
                            {
                                $cond: {
                                    if: {$eq: ["$$value", ""]},
                                    then: "",
                                    else: " - "
                                }
                            },
                            "$$this"
                        ]
                    }
                }
            },
            lowerCast: {
                $map: {
                    input : "$cast",
                    as: "actor",
                    in: {
                        $toLower: "$$actor"
                    }
                }
            }
        }
    },
    {
        $limit:{100}
    }
]


Cast oyuncularından ismi jane olan tüm oyuncuların ismini canan olarak değiştiriniz.

[
    {
        $project: {
            _id: 0,
            title: 1,
            poster: 1,
            modifiedCast: {
                $map: {
                    input: "#cast",
                    as: "actor",
                    in: {
                        $cond: {
                            if: {   
                                $regexMatch: {
                                    input: "$$actor",
                                    regex: "^Jane" // Jane ile başlayan tüm kayıtlar, Canan olarak düzenlecektir
                                }
                            },
                            then: {
                                $concat: ["Canan", " ", { $arrayElemAt: [{ $split: ["$$actor", " "] }, 1] }]
                            },
                            else: "$$actor"
                        }
                    }
                }
            }
        }
    },
    {
        $match: {
            modifiedCast: {$in: ["/^Canan/"] } // "Canan" ile başlayanları filtreler
        }
    }
]
 

Her filmdeki genres dizisinde yer alan türleri birleştirip tek bir cümle(string) olarak yazdırınız.


[
    {
        $project: {
            _id: 0,
            title: 1,
            poster: 1,
            combinedGenres: {
                $reduce: {
                    input: "$genres",
                    initialValue: "",
                    in: {
                        $concat:["$$value", " ", "$$this"]
                    }
                }
            }
        }
    }
]

1 Ocak 2015(dahil) tarihinden sonra yapılmış filmleri listeleyiniz.

[
    {
        $match: {
            released: {
                $gte: new Date("2015-01-01")
            }
        }
    },
    {
        $limit:{
            100
        }
    },
    {
        $project: {
            _id: 0,
            released: 1,
            title: 1
        }
    },
    {
        $sort:{
            released: 1
        }
    }
]

Filmleri yayınlandıkları aya göre gruplama işlemi yapınız

[
    {
        $group: {
            _id: {
                month: { $month: "$released"},
                year: {$year: "$released"}
            },
            count: { $sum: 1 }
        }
    },
    {
        $sort: {
            "_id.year": -1, //önce yıla göre sıralam işlemi
            "_id.month": -1 // aynı yıl için aya göre sıralama yapsın
        }
    },
    {
        $project: {
            _id: 0,
            year: 1,
            month: 1,
            count: 1
        }
    }
]

Filmleri listelerken, haftanın hangi günü yapıldığını gösteriniz.

[
    {
        $project: {
            _id: 0,
            title: 1,
            poster: 1,
            dayOfWeek: { // addFields işlemi
                $dayOfWeek : "$released"
            }
        }
    }
]


[
    {
        $project: {
            _id: 0,
            title: 1,
            poster: 1,
            dayOfWeek: {  
                $dayOfWeek : "$released"
            },
            dayOfName: {  
                $arrayElemAt: [
                    [
                        
                        "Sunday",      // 7
                        "Monday",      // 1
                        "Tuesday",     // 2
                        "Wednesday",   // 3
                        "Thursday",    // 4
                        "Friday",      // 5
                        "Saturday",    // 6
                    ]
                ], 
                {
                    $subtract: [{$dayOfWeek: "$released"}, 0]
                }
            }
        }
    }
]


bucket -> belgeleri belirli sınırlar (boundaries) dahilinde gruplandırmak için kullanılır. Her bir belge, groupby ile belirtilen alana göre sınırlar içerisine atar.

bucket Kullanımı


boundaries: [0, 5, 7, 8, 9, 10]

0 < imdb.rating < 5 bir groupla 
5 <= imdb.rating < 7 bir groupla 
7 <= imdb.rating < 8 bir groupla 
8 <= imdb.rating < 9 bir groupla 
9 <= imdb.rating < 10 bir groupla 
 bir belgenin rating kısmı yukarıdaki şartlara uymuyor ise, other olarak gruplanacak

[
    {
        $bucket: {
            groupBy: "$imdb.rating",
            boundaries: [0, 5, 7, 8, 9, 10],
            default:"Other",
            output: {
                count: {
                    $sum: 1
                },
                titles: {
                    $push: "$title"
                }
            }
        }
    },
    {
        $out: {
            db: "sample_nflix",
            coll: "groupByImdb" 
            // timeseries: {
            //     timeField: "field",
            //     bucketMaxSpanSeconds: "number",
            //     granularity: "granularity"
            // }
        }
    }
]


Out sample

[
    {
        $match: {
            "imdb.rating": {
                $gte: 8
            }
        }
    },
    {
        $project: {
            _id: 0,
            baslik: "$title", 
            resim: "$poster",
            arsiv: "$imdb",
            yil: "$year",
            yayinTarihi:"$released"
        }
    },
    {
        $sort: "imdb.rating"
    },
    {
        $limit: 100
    },
    {
        $out: {
            db: "sample_mflix",
            coll: "topMovies"
        }
    }
]