use testDB
 
for (let i = 0; i < 1000000; i++) {
    db.product.insertOne({
        name: `Product ${i}`,
        category: i % 10 === 0 ? 'Electronics' : 'Clothing',
        price: Math.random() * 1000,
        stock: Math.floor(Math.random() * 100),
        createdAt: new Date()
    });
}



index olmadan sorgu çalıştırma


db.product.find({category: 'Electronics'}).explain("executionStats")

Beklenen çıktı 
COLLSCAN            -> (collection scan) -> tüm koleksiyonu tarar
executionTimeMillis -> Yüksek bir değer dönecektir


index oluşturma
category alanı için indeks oluşturma
db.product.createIndex({ category: 1})



index oluşturma sonrası sorgu çalıştırma
db.product.find({category:'Electronics'}).explain('executionStats')

Beklenen çıktı
IXSCAN (index scan) -> sadece ilgili indeks taranır
executionTimeMillis -> önemli derecede düşüş görüllecektir.





explain() -> metodu bir sorgunun nasıl çalıştırıldığını ve performansıyla ilgili detaylı bilgi verir
executionStats         -> sorgunun nasıl çalıştırıldığına dait detaylı istatistik bilgiler verir.
ExectionTime           -> sorgu ne kadar sürdü (tamamlanma süresini verir)
TotalDocument Examined -> Sorgu tarafından taranan toplam belge sayısını teslim eder.
Total Keys Examined    -> kullanılan indexlerin taradığı toplam anahtar sayısını belirtir. bu indeks kullanımı olup olmadığını ve indexlerin verimliliğini kontrol etmek için önemlidir. 
Winning Plan -> sorgunun yürütülmesi sırasında MongoDB'nin en verimli bulduğpu planı gösterir. Bu plan, sorgunun en hızlı be en az kaynak tüketerek şekiklde nasıl çalışacağını gösterir.